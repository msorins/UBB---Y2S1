
=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{  }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[ (while(v -  4){ v=v -  1 };print(v)) ]
SymTable:
{  }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{ v: 6 }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[ print(v) ]
SymTable:
{ v: 6 }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{ v: 4 }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{  }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[ (while(v -  4){ v=v -  1 };print(v)) ]
SymTable:
{  }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{ v: 6 }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[ print(v) ]
SymTable:
{ v: 6 }
Out:

FileTable:

=== LogStart ===
=== 0 ===
ExeStack:
[ (v= 2;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 1 ===
ExeStack:
[ (a= 2 +  3 *  5;(b=a +  1;print(b))) ]
SymTable:
{  }
Out:

FileTable:
=== 2 ===
ExeStack:
[ (a= 2 -  2;(IF(a) THEN(v= 2)ELSE(v= 3);print(v))) ]
SymTable:
{  }
Out:

FileTable:
=== 3 ===
ExeStack:
[ (openRFileStmt( var_f, /Users/so/Desktop/Y2S2/MAP/Lab 2/ToyInterpreter/files/test.in) ;(ReadFileStmt(  0, var_c );print(var_c))) ]
SymTable:
{  }
Out:

FileTable:
=== 4 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(print( 100 + v);print( 100 + a))))) ]
SymTable:
{  }
Out:

FileTable:
=== 5 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);print(a)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 6 ===
ExeStack:
[ (v= 10;(NEW(v,  20 ) ;(NEW(a,  22 ) ;(NEW(a,  30 ) ;(print(a);(print(a);a= 0)))))) ]
SymTable:
{  }
Out:

FileTable:
=== 7 ===
ExeStack:
[ (v= 10 +  2 <  6;print(v)) ]
SymTable:
{  }
Out:

FileTable:
=== 8 ===
ExeStack:
[  ]
SymTable:
{ v: 4 }
Out:

FileTable:
